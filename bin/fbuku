#!/bin/bash
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program. If not, see <http://www.gnu.org/licenses/>.
#
# Copyright 2023 Jeremy Brubaker <jbru362@gmail.com>
#
# Inspired by ideas from:
#   https://github.com/DanielFGray/fzf-scripts/blob/master/fzbuku
#   https://github.com/junegunn/fzf/wiki/examples
#
# Defaults {{1
TAG_CLR_DFLT=7
URL_CLR_DFLT=5

# Documentation {{{1
#
VERSION='1.0'

print_help() {
    cat <<END >&2
Usage: $0 [OPTION] [QUERY]

Use fzf to manage buku bookmarks

QUERY can be used to refine the initial search. Prefix QUERY with
\# to search tags

  -n         do not colorize tags and url preview
  -t [COLOR] color to use for tags
               (256-color number, default = $TAG_CLR_DFLT)
  -u [COLOR] color to use for url preview
               (256-color number, default = $TAG_CLR_DFLT)
  -h   	     display this help and exit
  -v         output version information and exit
END
}

print_version() {
    cat <<END >&2
$0 $VERSION
Copyright (C) 2023 Orion Arts
License GPLv3+: GNU GPL version 3 or later <https://gnu.org/licenses/gpl.html>.
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Jeremy Brubaker.
END
}

# Process options {{{1
#
ansi=--ansi
tag_color=$(tput setaf "$TAG_CLR_DFLT")
url_color=$(tput setaf "$URL_CLR_DFLT")
reset=$(tput sgr0)
while getopts ':nt:u:hv' c; do
    case $c in
        n) tag_color= ; url_color= ; reset= ; ansi= ;;
        t) tag_color=$(tput setaf "$OPTARG") ;;
        u) url_color=$(tput setaf "$OPTARG") ;;
        h) print_help; exit 0 ;;
        v) print_version; exit 0 ;;
        ?) printf "Invalid option: -%s\n" "$OPTARG" >&2; print_help; exit 1 ;;
    esac
done
shift $((OPTIND-1))
OPTIND=1

# Functions {{{1
#
buku_list() {
    buku --nostdin -p -j |
        jq -r '.[] | "\(.index)\(.uri)\(.title)\(.tags)"' |
        awk -F \
            -v color="$1" \
            -v reset="${1:+$(tput sgr0)}" \
            '{
            if(length($4))
                $4 = "#" $4
            $4 = color gensub(/ /, " #", "g", $4) reset
            print
            }'
}
export -f buku_list

# Main {{{1
#
buku_list "$tag_color" |
    fzf \
        --multi \
        $ansi \
        --query "$*" \
        --with-nth 3.. \
        --preview-window 'bottom:10%' \
        --preview "printf %s{2}%s '$url_color' '$reset'" \
        --header "[Enter]Open [^A]Add [^E]Edit [^D]Delete [^U]Update [^R]Refresh" \
        --header-first \
        --bind "enter:execute-multi( \
            echo {2} | tr ' ' '\n' | sed '/^http/!s@^@http://@' | \
            xargs -I% xdg-open %)+abort" \
        --bind "ctrl-a:execute(buku -w)+reload(buku_list '$tag_color')" \
        --bind "ctrl-e:execute(buku -w {1})+reload(buku_list '$tag_color')" \
        --bind "ctrl-d:execute(buku -d {1})+reload(buku_list '$tag_color')" \
        --bind "ctrl-u:execute(buku -u {1})+reload(buku_list '$tag_color')" \
        --bind "ctrl-r:reload(buku_list '$tag_color')"

